{"ast":null,"code":"var _jsxFileName = \"/opt/app/src/App/HOC/PrivateRoute.hoc.js\";\nimport React, { useMemo } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({\n  auth,\n  path,\n  component,\n  exact,\n  userPermissions,\n  permissions\n}) => {\n  const hasRequiredPermissions = useMemo(() => {\n    return !permissions || userPermissions && userPermissions.some(userPermission => userPermission.name.includes(permissions));\n  }, [userPermissions, permissions]);\n  return auth && hasRequiredPermissions ? /*#__PURE__*/React.createElement(Route, {\n    path: path,\n    component: component,\n    exact: exact,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(Redirect, {\n    from: path,\n    to: auth ? '/dashboard' : '/login',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  auth: true,\n  userPermissions: []\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/opt/app/src/App/HOC/PrivateRoute.hoc.js"],"names":["React","useMemo","Route","Redirect","connect","PrivateRoute","auth","path","component","exact","userPermissions","permissions","hasRequiredPermissions","some","userPermission","name","includes","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,IAAP;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA,eAA/B;AAAgDC,EAAAA;AAAhD,CAAD,KAAkE;AACrF,QAAMC,sBAAsB,GAAGX,OAAO,CAAC,MAAM;AAC3C,WAAO,CAACU,WAAD,IAAiBD,eAAe,IACrCA,eAAe,CAACG,IAAhB,CAAqBC,cAAc,IACjCA,cAAc,CAACC,IAAf,CAAoBC,QAApB,CAA6BL,WAA7B,CADF,CADF;AAKD,GANqC,EAMnC,CAACD,eAAD,EAAkBC,WAAlB,CANmC,CAAtC;AAQA,SACGL,IAAI,IAAIM,sBAAT,gBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEL,IAAb;AAAmB,IAAA,SAAS,EAAEC,SAA9B;AAAyC,IAAA,KAAK,EAAEC,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,gBAGE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEF,IAAhB;AAAsB,IAAA,EAAE,EAAGD,IAAI,GAAG,YAAH,GAAkB,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ;AAMD,CAfD;;AAiBA,MAAMW,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,IAAI,EAAE,IAD4B;AAElCI,EAAAA,eAAe,EAAE;AAFiB,CAAZ,CAAxB;;AAKA,eAAeN,OAAO,CAACa,eAAD,CAAP,CAAyBZ,YAAzB,CAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nconst PrivateRoute = ({auth, path, component, exact, userPermissions, permissions}) => {\n  const hasRequiredPermissions = useMemo(() => {\n    return !permissions || (userPermissions &&\n      userPermissions.some(userPermission => \n        userPermission.name.includes(permissions)  \n      )\n    )\n  }, [userPermissions, permissions])\n\n  return (\n    (auth && hasRequiredPermissions) ?\n      <Route path={path} component={component} exact={exact}/>\n    :\n      <Redirect from={path} to={ auth ? '/dashboard' : '/login' }/>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  auth: true,\n  userPermissions: []\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}